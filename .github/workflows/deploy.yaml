# .github/workflows/deploy.yml
name: Build and Push VoteWave Images to ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_AUTH_REPOSITORY: votewave-auth-service
  ECR_POLLS_REPOSITORY: votewave-polls-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push auth-service image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_AUTH_REPOSITORY:$IMAGE_TAG -f Dockerfile.auth .
        docker tag $ECR_REGISTRY/$ECR_AUTH_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_AUTH_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_AUTH_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_AUTH_REPOSITORY:latest

    - name: Build, tag, and push polls-service image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_POLLS_REPOSITORY:$IMAGE_TAG -f Dockerfile.polls .
        docker tag $ECR_REGISTRY/$ECR_POLLS_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_POLLS_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_POLLS_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_POLLS_REPOSITORY:latest

